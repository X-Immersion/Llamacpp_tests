{
  "model_type": "gpt-4.1-mini",
  "scenario_type": "topic-detection",
  "timestamp": "20250701-155203",
  "test_type": "topic-detection",
  "language": "en",
  "results": [
    {
      "scenario_id": "topic_detection_en_001",
      "scenario_name": "Easy Sports vs Food Classification - Easy",
      "prompt": "Available topics: [\"talk about sports\", \"order food\", \"discuss weather\", \"ask for directions\"]\n\nSentence: \"I'd like a large pizza with pepperoni and extra cheese, please.\"",
      "response": "{\"topic\": \"order food\", \"confidence\": 100}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 2.713,
        "tokens_per_second": 4.79,
        "time_to_first_token_seconds": 0.271,
        "prompt_tokens": 187,
        "completion_tokens": 13,
        "total_tokens": 200,
        "response_length_chars": 42,
        "response_length_words": 5,
        "chars_per_second": 15.48,
        "words_per_second": 1.84
      },
      "expected_output": "{\"topic\": \"order food\", \"confidence\": 95}"
    },
    {
      "scenario_id": "topic_detection_en_002",
      "scenario_name": "Technology Subcategories - Hard",
      "prompt": "Available topics: [\"software development\", \"hardware troubleshooting\", \"network configuration\", \"database optimization\", \"cybersecurity concerns\", \"mobile app design\", \"cloud computing\", \"artificial intelligence\"]\n\nSentence: \"The machine learning model is overfitting on the training data and showing poor generalization.\"",
      "response": "{\"topic\": \"artificial intelligence\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 1.12,
        "tokens_per_second": 12.49,
        "time_to_first_token_seconds": 0.112,
        "prompt_tokens": 198,
        "completion_tokens": 14,
        "total_tokens": 212,
        "response_length_chars": 54,
        "response_length_words": 5,
        "chars_per_second": 48.19,
        "words_per_second": 4.46
      },
      "expected_output": "{\"topic\": \"artificial intelligence\", \"confidence\": 90}"
    },
    {
      "scenario_id": "topic_detection_en_003",
      "scenario_name": "Medical Specialties - Very Hard",
      "prompt": "Available topics: [\"cardiology\", \"neurology\", \"orthopedics\", \"dermatology\", \"gastroenterology\", \"endocrinology\", \"pulmonology\", \"rheumatology\", \"oncology\", \"psychiatry\"]\n\nSentence: \"The patient is experiencing irregular heartbeat patterns and chest tightness after climbing stairs.\"",
      "response": "{\"topic\": \"cardiology\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 1.348,
        "tokens_per_second": 9.64,
        "time_to_first_token_seconds": 0.135,
        "prompt_tokens": 210,
        "completion_tokens": 13,
        "total_tokens": 223,
        "response_length_chars": 41,
        "response_length_words": 4,
        "chars_per_second": 30.4,
        "words_per_second": 2.97
      },
      "expected_output": "{\"topic\": \"cardiology\", \"confidence\": 85}"
    },
    {
      "scenario_id": "topic_detection_en_004",
      "scenario_name": "Customer Service Intents - Medium",
      "prompt": "Available topics: [\"billing inquiry\", \"technical support\", \"product complaint\", \"refund request\", \"account cancellation\", \"feature request\"]\n\nSentence: \"I was charged twice for my subscription this month and need to get one of those charges reversed.\"",
      "response": "{\"topic\": \"billing inquiry\", \"confidence\": 90}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 1.033,
        "tokens_per_second": 12.58,
        "time_to_first_token_seconds": 0.103,
        "prompt_tokens": 187,
        "completion_tokens": 13,
        "total_tokens": 200,
        "response_length_chars": 46,
        "response_length_words": 5,
        "chars_per_second": 44.51,
        "words_per_second": 4.84
      },
      "expected_output": "{\"topic\": \"billing inquiry\", \"confidence\": 88}"
    },
    {
      "scenario_id": "topic_detection_en_005",
      "scenario_name": "Academic Subjects - Easy",
      "prompt": "Available topics: [\"mathematics\", \"literature\", \"biology\", \"history\", \"physics\", \"chemistry\"]\n\nSentence: \"Shakespeare's use of iambic pentameter in his sonnets demonstrates his mastery of poetic form.\"",
      "response": "{\"topic\": \"literature\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 0.832,
        "tokens_per_second": 15.63,
        "time_to_first_token_seconds": 0.083,
        "prompt_tokens": 188,
        "completion_tokens": 13,
        "total_tokens": 201,
        "response_length_chars": 41,
        "response_length_words": 4,
        "chars_per_second": 49.31,
        "words_per_second": 4.81
      },
      "expected_output": "{\"topic\": \"literature\", \"confidence\": 98}"
    },
    {
      "scenario_id": "topic_detection_en_006",
      "scenario_name": "Financial Services - Hard",
      "prompt": "Available topics: [\"investment advice\", \"loan application\", \"insurance claims\", \"retirement planning\", \"tax consultation\", \"mortgage refinancing\", \"credit score inquiry\", \"fraud reporting\", \"account opening\", \"currency exchange\"]\n\nSentence: \"I need help determining the optimal asset allocation for my 401k given that I'm 15 years from retirement.\"",
      "response": "{\"topic\": \"retirement planning\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 1.077,
        "tokens_per_second": 13.0,
        "time_to_first_token_seconds": 0.108,
        "prompt_tokens": 210,
        "completion_tokens": 14,
        "total_tokens": 224,
        "response_length_chars": 50,
        "response_length_words": 5,
        "chars_per_second": 46.44,
        "words_per_second": 4.64
      },
      "expected_output": "{\"topic\": \"retirement planning\", \"confidence\": 92}"
    },
    {
      "scenario_id": "topic_detection_en_007",
      "scenario_name": "Travel Related - Medium",
      "prompt": "Available topics: [\"flight booking\", \"hotel reservation\", \"car rental\", \"travel insurance\", \"visa requirements\", \"local attractions\", \"restaurant recommendations\", \"transportation info\"]\n\nSentence: \"What documents do I need to enter Japan as a tourist for two weeks?\"",
      "response": "{\"topic\": \"visa requirements\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 0.931,
        "tokens_per_second": 13.96,
        "time_to_first_token_seconds": 0.093,
        "prompt_tokens": 192,
        "completion_tokens": 13,
        "total_tokens": 205,
        "response_length_chars": 48,
        "response_length_words": 5,
        "chars_per_second": 51.56,
        "words_per_second": 5.37
      },
      "expected_output": "{\"topic\": \"visa requirements\", \"confidence\": 94}"
    },
    {
      "scenario_id": "topic_detection_en_008",
      "scenario_name": "E-commerce Actions - Very Hard",
      "prompt": "Available topics: [\"product search\", \"add to cart\", \"checkout process\", \"payment method\", \"shipping inquiry\", \"order tracking\", \"return policy\", \"price comparison\", \"product reviews\", \"wishlist management\", \"coupon application\", \"inventory check\"]\n\nSentence: \"I want to see what other customers thought about this laptop before I decide to buy it.\"",
      "response": "{\"topic\": \"product reviews\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 0.585,
        "tokens_per_second": 22.23,
        "time_to_first_token_seconds": 0.058,
        "prompt_tokens": 211,
        "completion_tokens": 13,
        "total_tokens": 224,
        "response_length_chars": 46,
        "response_length_words": 5,
        "chars_per_second": 78.65,
        "words_per_second": 8.55
      },
      "expected_output": "{\"topic\": \"product reviews\", \"confidence\": 87}"
    },
    {
      "scenario_id": "topic_detection_en_009",
      "scenario_name": "Emotional States - Hard",
      "prompt": "Available topics: [\"expressing joy\", \"showing frustration\", \"feeling anxious\", \"being confused\", \"demonstrating anger\", \"showing sadness\", \"expressing excitement\", \"feeling overwhelmed\"]\n\nSentence: \"I keep going over the instructions but I still don't understand how this is supposed to work.\"",
      "response": "{\"topic\": \"being confused\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 0.639,
        "tokens_per_second": 20.34,
        "time_to_first_token_seconds": 0.064,
        "prompt_tokens": 202,
        "completion_tokens": 13,
        "total_tokens": 215,
        "response_length_chars": 45,
        "response_length_words": 5,
        "chars_per_second": 70.39,
        "words_per_second": 7.82
      },
      "expected_output": "{\"topic\": \"being confused\", \"confidence\": 78}"
    },
    {
      "scenario_id": "topic_detection_en_010",
      "scenario_name": "Home Maintenance - Medium",
      "prompt": "Available topics: [\"plumbing issues\", \"electrical problems\", \"heating and cooling\", \"pest control\", \"gardening help\", \"appliance repair\", \"painting and decorating\", \"security systems\", \"roof maintenance\", \"flooring installation\"]\n\nSentence: \"The faucet in my kitchen has been dripping constantly for the past week and it's driving me crazy.\"",
      "response": "{\"topic\": \"plumbing issues\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 0.821,
        "tokens_per_second": 17.05,
        "time_to_first_token_seconds": 0.082,
        "prompt_tokens": 212,
        "completion_tokens": 14,
        "total_tokens": 226,
        "response_length_chars": 46,
        "response_length_words": 5,
        "chars_per_second": 56.01,
        "words_per_second": 6.09
      },
      "expected_output": "{\"topic\": \"plumbing issues\", \"confidence\": 96}"
    }
  ],
  "performance_summary": {
    "model_download_time_seconds": 0,
    "model_load_time_seconds": 0,
    "total_test_time_seconds": 11.101,
    "total_scenarios_tested": 10,
    "average_generation_time_seconds": 1.11,
    "average_tokens_per_second": 14.17,
    "total_tokens_generated": 2130,
    "total_generation_time_seconds": 11.099
  }
}