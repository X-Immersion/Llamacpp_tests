{
  "model_type": "qwen3-8B",
  "scenario_type": "topic-detection-en",
  "timestamp": "20250701-170411",
  "test_type": "topic-detection-en",
  "language": "en",
  "results": [
    {
      "scenario_id": "topic_detection_en_001",
      "scenario_name": "Easy Sports vs Food Classification - Easy",
      "prompt": "Available topics: [\"talk about sports\", \"order food\", \"discuss weather\", \"ask for directions\"]\n\nSentence: \"I'd like a large pizza with pepperoni and extra cheese, please.\"",
      "response": "{\"topic\": \"order food\", \"confidence\": 100}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 6.722,
        "tokens_per_second": 2.83,
        "time_to_first_token_seconds": 0.672,
        "prompt_tokens": 198,
        "completion_tokens": 19,
        "total_tokens": 217,
        "response_length_chars": 42,
        "response_length_words": 5,
        "chars_per_second": 6.25,
        "words_per_second": 0.74
      },
      "expected_output": "{\"topic\": \"order food\", \"confidence\": 95}"
    },
    {
      "scenario_id": "topic_detection_en_002",
      "scenario_name": "Technology Subcategories - Hard",
      "prompt": "Available topics: [\"software development\", \"hardware troubleshooting\", \"network configuration\", \"database optimization\", \"cybersecurity concerns\", \"mobile app design\", \"cloud computing\", \"artificial intelligence\"]\n\nSentence: \"The machine learning model is overfitting on the training data and showing poor generalization.\"",
      "response": "{\"topic\": \"artificial intelligence\", \"confidence\": 90}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 4.005,
        "tokens_per_second": 4.74,
        "time_to_first_token_seconds": 0.4,
        "prompt_tokens": 208,
        "completion_tokens": 19,
        "total_tokens": 227,
        "response_length_chars": 54,
        "response_length_words": 5,
        "chars_per_second": 13.48,
        "words_per_second": 1.25
      },
      "expected_output": "{\"topic\": \"artificial intelligence\", \"confidence\": 90}"
    },
    {
      "scenario_id": "topic_detection_en_003",
      "scenario_name": "Medical Specialties - Very Hard",
      "prompt": "Available topics: [\"cardiology\", \"neurology\", \"orthopedics\", \"dermatology\", \"gastroenterology\", \"endocrinology\", \"pulmonology\", \"rheumatology\", \"oncology\", \"psychiatry\"]\n\nSentence: \"The patient is experiencing irregular heartbeat patterns and chest tightness after climbing stairs.\"",
      "response": "{\"topic\": \"cardiology\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 3.923,
        "tokens_per_second": 4.59,
        "time_to_first_token_seconds": 0.392,
        "prompt_tokens": 221,
        "completion_tokens": 18,
        "total_tokens": 239,
        "response_length_chars": 41,
        "response_length_words": 4,
        "chars_per_second": 10.45,
        "words_per_second": 1.02
      },
      "expected_output": "{\"topic\": \"cardiology\", \"confidence\": 85}"
    },
    {
      "scenario_id": "topic_detection_en_004",
      "scenario_name": "Customer Service Intents - Medium",
      "prompt": "Available topics: [\"billing inquiry\", \"technical support\", \"product complaint\", \"refund request\", \"account cancellation\", \"feature request\"]\n\nSentence: \"I was charged twice for my subscription this month and need to get one of those charges reversed.\"",
      "response": "{\"topic\": \"refund request\", \"confidence\": 90}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 3.354,
        "tokens_per_second": 5.37,
        "time_to_first_token_seconds": 0.335,
        "prompt_tokens": 197,
        "completion_tokens": 18,
        "total_tokens": 215,
        "response_length_chars": 45,
        "response_length_words": 5,
        "chars_per_second": 13.42,
        "words_per_second": 1.49
      },
      "expected_output": "{\"topic\": \"billing inquiry\", \"confidence\": 88}"
    },
    {
      "scenario_id": "topic_detection_en_005",
      "scenario_name": "Academic Subjects - Easy",
      "prompt": "Available topics: [\"mathematics\", \"literature\", \"biology\", \"history\", \"physics\", \"chemistry\"]\n\nSentence: \"Shakespeare's use of iambic pentameter in his sonnets demonstrates his mastery of poetic form.\"",
      "response": "{\"topic\": \"literature\", \"confidence\": 100}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 3.38,
        "tokens_per_second": 5.62,
        "time_to_first_token_seconds": 0.338,
        "prompt_tokens": 196,
        "completion_tokens": 19,
        "total_tokens": 215,
        "response_length_chars": 42,
        "response_length_words": 4,
        "chars_per_second": 12.43,
        "words_per_second": 1.18
      },
      "expected_output": "{\"topic\": \"literature\", \"confidence\": 98}"
    },
    {
      "scenario_id": "topic_detection_en_006",
      "scenario_name": "Financial Services - Hard",
      "prompt": "Available topics: [\"investment advice\", \"loan application\", \"insurance claims\", \"retirement planning\", \"tax consultation\", \"mortgage refinancing\", \"credit score inquiry\", \"fraud reporting\", \"account opening\", \"currency exchange\"]\n\nSentence: \"I need help determining the optimal asset allocation for my 401k given that I'm 15 years from retirement.\"",
      "response": "{\"topic\": \"retirement planning\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 4.153,
        "tokens_per_second": 4.57,
        "time_to_first_token_seconds": 0.415,
        "prompt_tokens": 225,
        "completion_tokens": 19,
        "total_tokens": 244,
        "response_length_chars": 50,
        "response_length_words": 5,
        "chars_per_second": 12.04,
        "words_per_second": 1.2
      },
      "expected_output": "{\"topic\": \"retirement planning\", \"confidence\": 92}"
    },
    {
      "scenario_id": "topic_detection_en_007",
      "scenario_name": "Travel Related - Medium",
      "prompt": "Available topics: [\"flight booking\", \"hotel reservation\", \"car rental\", \"travel insurance\", \"visa requirements\", \"local attractions\", \"restaurant recommendations\", \"transportation info\"]\n\nSentence: \"What documents do I need to enter Japan as a tourist for two weeks?\"",
      "response": "{\"topic\": \"visa requirements\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 3.573,
        "tokens_per_second": 5.04,
        "time_to_first_token_seconds": 0.357,
        "prompt_tokens": 202,
        "completion_tokens": 18,
        "total_tokens": 220,
        "response_length_chars": 48,
        "response_length_words": 5,
        "chars_per_second": 13.43,
        "words_per_second": 1.4
      },
      "expected_output": "{\"topic\": \"visa requirements\", \"confidence\": 94}"
    },
    {
      "scenario_id": "topic_detection_en_008",
      "scenario_name": "E-commerce Actions - Very Hard",
      "prompt": "Available topics: [\"product search\", \"add to cart\", \"checkout process\", \"payment method\", \"shipping inquiry\", \"order tracking\", \"return policy\", \"price comparison\", \"product reviews\", \"wishlist management\", \"coupon application\", \"inventory check\"]\n\nSentence: \"I want to see what other customers thought about this laptop before I decide to buy it.\"",
      "response": "{\"topic\": \"product reviews\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 3.943,
        "tokens_per_second": 4.57,
        "time_to_first_token_seconds": 0.394,
        "prompt_tokens": 221,
        "completion_tokens": 18,
        "total_tokens": 239,
        "response_length_chars": 46,
        "response_length_words": 5,
        "chars_per_second": 11.67,
        "words_per_second": 1.27
      },
      "expected_output": "{\"topic\": \"product reviews\", \"confidence\": 87}"
    },
    {
      "scenario_id": "topic_detection_en_009",
      "scenario_name": "Emotional States - Hard",
      "prompt": "Available topics: [\"expressing joy\", \"showing frustration\", \"feeling anxious\", \"being confused\", \"demonstrating anger\", \"showing sadness\", \"expressing excitement\", \"feeling overwhelmed\"]\n\nSentence: \"I keep going over the instructions but I still don't understand how this is supposed to work.\"",
      "response": "{\"topic\": \"being confused\", \"confidence\": 90}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 3.691,
        "tokens_per_second": 4.88,
        "time_to_first_token_seconds": 0.369,
        "prompt_tokens": 214,
        "completion_tokens": 18,
        "total_tokens": 232,
        "response_length_chars": 45,
        "response_length_words": 5,
        "chars_per_second": 12.19,
        "words_per_second": 1.35
      },
      "expected_output": "{\"topic\": \"being confused\", \"confidence\": 78}"
    },
    {
      "scenario_id": "topic_detection_en_010",
      "scenario_name": "Home Maintenance - Medium",
      "prompt": "Available topics: [\"plumbing issues\", \"electrical problems\", \"heating and cooling\", \"pest control\", \"gardening help\", \"appliance repair\", \"painting and decorating\", \"security systems\", \"roof maintenance\", \"flooring installation\"]\n\nSentence: \"The faucet in my kitchen has been dripping constantly for the past week and it's driving me crazy.\"",
      "response": "{\"topic\": \"plumbing issues\", \"confidence\": 100}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 4.473,
        "tokens_per_second": 4.47,
        "time_to_first_token_seconds": 0.447,
        "prompt_tokens": 223,
        "completion_tokens": 20,
        "total_tokens": 243,
        "response_length_chars": 47,
        "response_length_words": 5,
        "chars_per_second": 10.51,
        "words_per_second": 1.12
      },
      "expected_output": "{\"topic\": \"plumbing issues\", \"confidence\": 96}"
    },
    {
      "scenario_id": "topic_detection_en_011",
      "scenario_name": "Complex Legal Domains - Very Hard",
      "prompt": "Available topics: [\"contract law\", \"criminal defense\", \"family law\", \"personal injury\", \"corporate law\", \"intellectual property\", \"employment law\", \"real estate law\", \"tax law\", \"immigration law\", \"bankruptcy law\", \"environmental law\", \"healthcare law\", \"securities law\", \"antitrust law\", \"constitutional law\", \"administrative law\", \"maritime law\", \"aviation law\", \"entertainment law\", \"sports law\", \"nonprofit law\", \"elder law\", \"military law\", \"international law\"]\n\nSentence: \"The startup's patent application for their AI algorithm was rejected, but they're also facing a lawsuit from a former employee who claims wrongful termination and wants equity compensation.\"",
      "response": "{\"topic\": \"intellectual property\", \"confidence\": 85}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.77,
        "tokens_per_second": 3.29,
        "time_to_first_token_seconds": 0.577,
        "prompt_tokens": 301,
        "completion_tokens": 19,
        "total_tokens": 320,
        "response_length_chars": 52,
        "response_length_words": 5,
        "chars_per_second": 9.01,
        "words_per_second": 0.87
      },
      "expected_output": "{\"topic\": \"intellectual property\", \"confidence\": 75}"
    },
    {
      "scenario_id": "topic_detection_en_012",
      "scenario_name": "Medical Subspecialties Overlap - Very Hard",
      "prompt": "Available topics: [\"cardiothoracic surgery\", \"interventional cardiology\", \"electrophysiology\", \"cardiac anesthesiology\", \"cardiovascular nursing\", \"cardiac rehabilitation\", \"pediatric cardiology\", \"cardiac imaging\", \"heart failure specialty\", \"vascular surgery\", \"cardiac catheterization\", \"perfusion technology\", \"cardiac pharmacy\", \"cardiovascular research\", \"transplant cardiology\", \"preventive cardiology\", \"cardiac emergency medicine\", \"cardiovascular genetics\", \"cardiac nutrition\", \"cardiovascular pathology\"]\n\nSentence: \"The patient requires immediate catheter-based intervention to restore blood flow to the blocked coronary artery, followed by surgical bypass if the procedure fails.\"",
      "response": "{\"topic\": \"cardiac catheterization\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.768,
        "tokens_per_second": 3.64,
        "time_to_first_token_seconds": 0.577,
        "prompt_tokens": 298,
        "completion_tokens": 21,
        "total_tokens": 319,
        "response_length_chars": 54,
        "response_length_words": 5,
        "chars_per_second": 9.36,
        "words_per_second": 0.87
      },
      "expected_output": "{\"topic\": \"interventional cardiology\", \"confidence\": 80}"
    },
    {
      "scenario_id": "topic_detection_en_013",
      "scenario_name": "Technology Stack Components - Very Hard",
      "prompt": "Available topics: [\"frontend frameworks\", \"backend APIs\", \"database optimization\", \"container orchestration\", \"CI/CD pipelines\", \"monitoring and logging\", \"load balancing\", \"caching strategies\", \"security implementation\", \"testing frameworks\", \"code quality tools\", \"version control\", \"infrastructure as code\", \"microservices architecture\", \"serverless computing\", \"edge computing\", \"API gateways\", \"message queuing\", \"data warehousing\", \"machine learning ops\", \"cloud platforms\", \"network configuration\", \"backup and recovery\", \"performance optimization\"]\n\nSentence: \"Our React application is experiencing slow load times, so we need to implement Redis caching and optimize our PostgreSQL queries while also setting up proper monitoring.\"",
      "response": "{\"topic\": \"performance optimization\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.494,
        "tokens_per_second": 3.28,
        "time_to_first_token_seconds": 0.549,
        "prompt_tokens": 294,
        "completion_tokens": 18,
        "total_tokens": 312,
        "response_length_chars": 55,
        "response_length_words": 5,
        "chars_per_second": 10.01,
        "words_per_second": 0.91
      },
      "expected_output": "{\"topic\": \"performance optimization\", \"confidence\": 70}"
    },
    {
      "scenario_id": "topic_detection_en_014",
      "scenario_name": "Financial Investment Categories - Very Hard",
      "prompt": "Available topics: [\"equity investments\", \"fixed income bonds\", \"commodities trading\", \"foreign exchange\", \"real estate investment\", \"cryptocurrency\", \"hedge funds\", \"mutual funds\", \"ETF strategies\", \"options trading\", \"futures contracts\", \"private equity\", \"venture capital\", \"angel investing\", \"crowdfunding\", \"peer-to-peer lending\", \"robo-advisors\", \"tax-advantaged accounts\", \"retirement planning\", \"estate planning\", \"insurance products\", \"alternative investments\", \"sustainable investing\", \"quantitative trading\", \"risk management\"]\n\nSentence: \"I'm considering diversifying my portfolio by adding some gold and silver exposure through an ETF, but I'm also interested in direct cryptocurrency purchases for long-term growth.\"",
      "response": "{\"topic\": \"ETF strategies\", \"confidence\": 85}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.825,
        "tokens_per_second": 3.09,
        "time_to_first_token_seconds": 0.583,
        "prompt_tokens": 305,
        "completion_tokens": 18,
        "total_tokens": 323,
        "response_length_chars": 45,
        "response_length_words": 5,
        "chars_per_second": 7.73,
        "words_per_second": 0.86
      },
      "expected_output": "{\"topic\": \"commodities trading\", \"confidence\": 65}"
    },
    {
      "scenario_id": "topic_detection_en_015",
      "scenario_name": "Academic Research Fields - Very Hard",
      "prompt": "Available topics: [\"molecular biology\", \"computational linguistics\", \"cognitive neuroscience\", \"quantum physics\", \"environmental chemistry\", \"behavioral economics\", \"social anthropology\", \"political science\", \"developmental psychology\", \"applied mathematics\", \"biomedical engineering\", \"materials science\", \"comparative literature\", \"digital humanities\", \"epidemiology\", \"geophysics\", \"pharmacology\", \"robotics engineering\", \"climate science\", \"biochemistry\", \"artificial intelligence\", \"data science\", \"cybersecurity research\", \"renewable energy\", \"space exploration\"]\n\nSentence: \"The research team is using machine learning algorithms to analyze large datasets of brain imaging data to understand how language processing occurs in bilingual individuals.\"",
      "response": "{\"topic\": \"cognitive neuroscience\", \"confidence\": 90}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.726,
        "tokens_per_second": 3.32,
        "time_to_first_token_seconds": 0.573,
        "prompt_tokens": 302,
        "completion_tokens": 19,
        "total_tokens": 321,
        "response_length_chars": 53,
        "response_length_words": 5,
        "chars_per_second": 9.26,
        "words_per_second": 0.87
      },
      "expected_output": "{\"topic\": \"cognitive neuroscience\", \"confidence\": 75}"
    },
    {
      "scenario_id": "topic_detection_en_016",
      "scenario_name": "Business Operations Departments - Very Hard",
      "prompt": "Available topics: [\"human resources\", \"marketing and advertising\", \"sales operations\", \"customer service\", \"finance and accounting\", \"supply chain management\", \"product development\", \"quality assurance\", \"legal and compliance\", \"information technology\", \"research and development\", \"procurement\", \"business development\", \"strategic planning\", \"operations management\", \"risk management\", \"investor relations\", \"public relations\", \"training and development\", \"facilities management\", \"data analytics\", \"project management\", \"change management\", \"vendor management\", \"corporate governance\"]\n\nSentence: \"We need to coordinate with multiple departments to launch the new product: marketing needs to prepare campaigns, legal must review compliance requirements, and procurement should negotiate supplier contracts.\"",
      "response": "{\"topic\": \"product development\", \"confidence\": 85}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.504,
        "tokens_per_second": 3.27,
        "time_to_first_token_seconds": 0.55,
        "prompt_tokens": 296,
        "completion_tokens": 18,
        "total_tokens": 314,
        "response_length_chars": 50,
        "response_length_words": 5,
        "chars_per_second": 9.08,
        "words_per_second": 0.91
      },
      "expected_output": "{\"topic\": \"product development\", \"confidence\": 70}"
    },
    {
      "scenario_id": "topic_detection_en_017",
      "scenario_name": "Entertainment Industry Sectors - Very Hard",
      "prompt": "Available topics: [\"film production\", \"television broadcasting\", \"music recording\", \"live concerts\", \"theater productions\", \"streaming platforms\", \"video game development\", \"sports entertainment\", \"comedy and stand-up\", \"documentary filmmaking\", \"animation studios\", \"talent management\", \"entertainment law\", \"distribution networks\", \"marketing and publicity\", \"post-production services\", \"casting and auditions\", \"location scouting\", \"equipment rental\", \"entertainment journalism\", \"fan engagement\", \"merchandise licensing\", \"international sales\", \"awards and festivals\"]\n\nSentence: \"The streaming service is investing heavily in original content creation, including both scripted series and documentary projects, while also securing licensing deals for existing film libraries.\"",
      "response": "{\"topic\": \"streaming platforms\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.609,
        "tokens_per_second": 3.39,
        "time_to_first_token_seconds": 0.561,
        "prompt_tokens": 299,
        "completion_tokens": 19,
        "total_tokens": 318,
        "response_length_chars": 50,
        "response_length_words": 5,
        "chars_per_second": 8.91,
        "words_per_second": 0.89
      },
      "expected_output": "{\"topic\": \"streaming platforms\", \"confidence\": 80}"
    },
    {
      "scenario_id": "topic_detection_en_018",
      "scenario_name": "Environmental Science Specializations - Very Hard",
      "prompt": "Available topics: [\"air quality monitoring\", \"water pollution control\", \"soil contamination\", \"climate change research\", \"renewable energy systems\", \"waste management\", \"biodiversity conservation\", \"ecosystem restoration\", \"environmental impact assessment\", \"sustainable agriculture\", \"green building design\", \"carbon footprint analysis\", \"environmental policy\", \"wildlife protection\", \"marine conservation\", \"forest management\", \"urban planning\", \"environmental education\", \"pollution remediation\", \"environmental health\", \"conservation biology\", \"environmental economics\", \"ecological modeling\", \"environmental monitoring\", \"sustainability consulting\"]\n\nSentence: \"The industrial facility's discharge is affecting both the local river ecosystem and the quality of groundwater, requiring comprehensive testing and remediation strategies.\"",
      "response": "{\"topic\": \"pollution remediation\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.992,
        "tokens_per_second": 3.34,
        "time_to_first_token_seconds": 0.599,
        "prompt_tokens": 308,
        "completion_tokens": 20,
        "total_tokens": 328,
        "response_length_chars": 52,
        "response_length_words": 5,
        "chars_per_second": 8.68,
        "words_per_second": 0.83
      },
      "expected_output": "{\"topic\": \"water pollution control\", \"confidence\": 85}"
    },
    {
      "scenario_id": "topic_detection_en_019",
      "scenario_name": "Educational Technology Applications - Very Hard",
      "prompt": "Available topics: [\"learning management systems\", \"virtual reality education\", \"adaptive learning platforms\", \"gamification in education\", \"online assessment tools\", \"collaborative learning spaces\", \"artificial intelligence tutoring\", \"augmented reality applications\", \"educational data analytics\", \"mobile learning apps\", \"video conferencing tools\", \"digital textbooks\", \"simulation software\", \"coding education platforms\", \"language learning apps\", \"special needs technology\", \"teacher training platforms\", \"student information systems\", \"plagiarism detection\", \"educational content creation\", \"peer-to-peer learning\", \"microlearning platforms\", \"certification systems\", \"educational research tools\", \"accessibility technology\"]\n\nSentence: \"The university is implementing a new platform that uses AI to personalize learning paths for each student based on their performance data and learning style preferences.\"",
      "response": "{\"topic\": \"artificial intelligence tutoring\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 6.039,
        "tokens_per_second": 3.31,
        "time_to_first_token_seconds": 0.604,
        "prompt_tokens": 316,
        "completion_tokens": 20,
        "total_tokens": 336,
        "response_length_chars": 63,
        "response_length_words": 6,
        "chars_per_second": 10.43,
        "words_per_second": 0.99
      },
      "expected_output": "{\"topic\": \"adaptive learning platforms\", \"confidence\": 90}"
    },
    {
      "scenario_id": "topic_detection_en_020",
      "scenario_name": "Transportation and Logistics - Very Hard",
      "prompt": "Available topics: [\"freight shipping\", \"passenger transportation\", \"warehouse management\", \"inventory control\", \"supply chain optimization\", \"last-mile delivery\", \"international shipping\", \"customs and trade\", \"fleet management\", \"route optimization\", \"transportation planning\", \"cargo handling\", \"logistics analytics\", \"distribution networks\", \"cold chain logistics\", \"e-commerce fulfillment\", \"freight brokerage\", \"multimodal transport\", \"reverse logistics\", \"packaging solutions\", \"tracking and visibility\", \"transportation safety\", \"fuel management\", \"compliance and regulations\", \"autonomous vehicles\"]\n\nSentence: \"The e-commerce company needs to optimize their delivery routes while maintaining temperature-controlled storage for perishable goods and ensuring real-time tracking for customers.\"",
      "response": "{\"topic\": \"cold chain logistics\", \"confidence\": 90}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.635,
        "tokens_per_second": 3.37,
        "time_to_first_token_seconds": 0.564,
        "prompt_tokens": 300,
        "completion_tokens": 19,
        "total_tokens": 319,
        "response_length_chars": 51,
        "response_length_words": 6,
        "chars_per_second": 9.05,
        "words_per_second": 1.06
      },
      "expected_output": "{\"topic\": \"last-mile delivery\", \"confidence\": 75}"
    },
    {
      "scenario_id": "topic_detection_en_021",
      "scenario_name": "Healthcare Administration Complexity - Very Hard",
      "prompt": "Available topics: [\"patient records management\", \"insurance billing\", \"medical coding\", \"appointment scheduling\", \"pharmacy operations\", \"laboratory services\", \"radiology management\", \"emergency department\", \"surgical scheduling\", \"staff management\", \"compliance and accreditation\", \"quality improvement\", \"patient safety\", \"revenue cycle management\", \"health information systems\", \"telemedicine platforms\", \"supply chain management\", \"facilities management\", \"risk management\", \"patient experience\", \"clinical documentation\", \"credentialing processes\", \"medical device management\", \"infection control\", \"discharge planning\"]\n\nSentence: \"The hospital is implementing a new system that integrates patient scheduling with insurance verification and automatic medical coding to streamline the revenue cycle process.\"",
      "response": "{\"topic\": \"revenue cycle management\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.691,
        "tokens_per_second": 3.51,
        "time_to_first_token_seconds": 0.569,
        "prompt_tokens": 297,
        "completion_tokens": 20,
        "total_tokens": 317,
        "response_length_chars": 55,
        "response_length_words": 6,
        "chars_per_second": 9.66,
        "words_per_second": 1.05
      },
      "expected_output": "{\"topic\": \"revenue cycle management\", \"confidence\": 85}"
    },
    {
      "scenario_id": "topic_detection_en_022",
      "scenario_name": "Manufacturing Process Categories - Very Hard",
      "prompt": "Available topics: [\"assembly line operations\", \"quality control testing\", \"inventory management\", \"production planning\", \"equipment maintenance\", \"safety protocols\", \"lean manufacturing\", \"automation systems\", \"supply chain coordination\", \"workforce scheduling\", \"product design\", \"material sourcing\", \"waste reduction\", \"energy efficiency\", \"regulatory compliance\", \"continuous improvement\", \"cost optimization\", \"capacity planning\", \"performance monitoring\", \"vendor management\", \"packaging and shipping\", \"research and development\", \"process engineering\", \"environmental compliance\", \"technology integration\"]\n\nSentence: \"The factory is experiencing quality issues with their latest product batch, requiring immediate inspection of raw materials, adjustment of machine calibration, and implementation of additional testing procedures.\"",
      "response": "{\"topic\": \"quality control testing\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.564,
        "tokens_per_second": 3.41,
        "time_to_first_token_seconds": 0.556,
        "prompt_tokens": 296,
        "completion_tokens": 19,
        "total_tokens": 315,
        "response_length_chars": 54,
        "response_length_words": 6,
        "chars_per_second": 9.7,
        "words_per_second": 1.08
      },
      "expected_output": "{\"topic\": \"quality control testing\", \"confidence\": 80}"
    },
    {
      "scenario_id": "topic_detection_en_023",
      "scenario_name": "Digital Marketing Specializations - Very Hard",
      "prompt": "Available topics: [\"search engine optimization\", \"pay-per-click advertising\", \"social media marketing\", \"content marketing\", \"email marketing\", \"influencer partnerships\", \"affiliate marketing\", \"conversion optimization\", \"marketing automation\", \"customer segmentation\", \"brand management\", \"public relations\", \"event marketing\", \"video marketing\", \"mobile marketing\", \"e-commerce marketing\", \"marketing analytics\", \"customer retention\", \"lead generation\", \"market research\", \"competitive analysis\", \"growth hacking\", \"user experience optimization\", \"remarketing campaigns\", \"international marketing\"]\n\nSentence: \"The campaign is using retargeting pixels to show personalized ads to website visitors who didn't complete their purchase, while also running A/B tests on different landing page designs to improve conversion rates.\"",
      "response": "{\"topic\": \"remarketing campaigns\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.714,
        "tokens_per_second": 3.33,
        "time_to_first_token_seconds": 0.571,
        "prompt_tokens": 301,
        "completion_tokens": 19,
        "total_tokens": 320,
        "response_length_chars": 52,
        "response_length_words": 5,
        "chars_per_second": 9.1,
        "words_per_second": 0.88
      },
      "expected_output": "{\"topic\": \"conversion optimization\", \"confidence\": 75}"
    },
    {
      "scenario_id": "topic_detection_en_024",
      "scenario_name": "Scientific Research Methods - Very Hard",
      "prompt": "Available topics: [\"experimental design\", \"statistical analysis\", \"data collection\", \"literature review\", \"hypothesis formation\", \"peer review process\", \"research ethics\", \"grant writing\", \"laboratory techniques\", \"field research\", \"survey methodology\", \"interview techniques\", \"observation studies\", \"case study analysis\", \"meta-analysis\", \"systematic reviews\", \"qualitative research\", \"quantitative research\", \"mixed methods\", \"publication process\", \"research collaboration\", \"reproducibility studies\", \"research integrity\", \"data management\", \"scientific communication\"]\n\nSentence: \"The research team is conducting a double-blind randomized controlled trial with proper statistical power calculations and predetermined outcome measures to test their hypothesis.\"",
      "response": "{\"topic\": \"experimental design\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.293,
        "tokens_per_second": 3.4,
        "time_to_first_token_seconds": 0.529,
        "prompt_tokens": 294,
        "completion_tokens": 18,
        "total_tokens": 312,
        "response_length_chars": 50,
        "response_length_words": 5,
        "chars_per_second": 9.45,
        "words_per_second": 0.94
      },
      "expected_output": "{\"topic\": \"experimental design\", \"confidence\": 90}"
    },
    {
      "scenario_id": "topic_detection_en_025",
      "scenario_name": "Real Estate Market Segments - Very Hard",
      "prompt": "Available topics: [\"residential sales\", \"commercial leasing\", \"property management\", \"real estate investment\", \"property development\", \"market analysis\", \"property valuation\", \"mortgage lending\", \"title and escrow\", \"property inspection\", \"real estate law\", \"zoning and permits\", \"construction management\", \"architectural design\", \"urban planning\", \"property marketing\", \"tenant relations\", \"facility maintenance\", \"lease negotiations\", \"property taxes\", \"insurance services\", \"environmental assessments\", \"historic preservation\", \"sustainable building\", \"international real estate\"]\n\nSentence: \"The investor is looking to acquire a mixed-use development project that combines retail space on the ground floor with residential units above, requiring both commercial and residential financing expertise.\"",
      "response": "{\"topic\": \"real estate investment\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.489,
        "tokens_per_second": 3.46,
        "time_to_first_token_seconds": 0.549,
        "prompt_tokens": 299,
        "completion_tokens": 19,
        "total_tokens": 318,
        "response_length_chars": 53,
        "response_length_words": 6,
        "chars_per_second": 9.66,
        "words_per_second": 1.09
      },
      "expected_output": "{\"topic\": \"real estate investment\", \"confidence\": 75}"
    },
    {
      "scenario_id": "topic_detection_en_026",
      "scenario_name": "Cybersecurity Threat Categories - Very Hard",
      "prompt": "Available topics: [\"malware detection\", \"phishing prevention\", \"network security\", \"data encryption\", \"access control\", \"vulnerability assessment\", \"incident response\", \"security awareness training\", \"compliance auditing\", \"threat intelligence\", \"penetration testing\", \"security monitoring\", \"identity management\", \"cloud security\", \"mobile device security\", \"endpoint protection\", \"security architecture\", \"risk assessment\", \"disaster recovery\", \"forensic analysis\", \"security governance\", \"third-party security\", \"application security\", \"industrial control systems\", \"privacy protection\"]\n\nSentence: \"The security team discovered that attackers gained access through a compromised email account and are now investigating the extent of data exfiltration while implementing additional monitoring controls.\"",
      "response": "{\"topic\": \"incident response\", \"confidence\": 90}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.574,
        "tokens_per_second": 3.23,
        "time_to_first_token_seconds": 0.557,
        "prompt_tokens": 297,
        "completion_tokens": 18,
        "total_tokens": 315,
        "response_length_chars": 48,
        "response_length_words": 5,
        "chars_per_second": 8.61,
        "words_per_second": 0.9
      },
      "expected_output": "{\"topic\": \"incident response\", \"confidence\": 85}"
    },
    {
      "scenario_id": "topic_detection_en_027",
      "scenario_name": "Aerospace Engineering Disciplines - Very Hard",
      "prompt": "Available topics: [\"aerodynamics\", \"propulsion systems\", \"flight controls\", \"structural analysis\", \"materials engineering\", \"avionics systems\", \"spacecraft design\", \"satellite technology\", \"mission planning\", \"systems integration\", \"testing and validation\", \"manufacturing processes\", \"quality assurance\", \"safety analysis\", \"performance optimization\", \"computational modeling\", \"wind tunnel testing\", \"flight simulation\", \"certification processes\", \"maintenance engineering\", \"human factors\", \"project management\", \"cost analysis\", \"environmental compliance\", \"international standards\"]\n\nSentence: \"The new aircraft design requires extensive wind tunnel testing to validate the computational fluid dynamics models and ensure optimal lift-to-drag ratios across different flight conditions.\"",
      "response": "{\"topic\": \"wind tunnel testing\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.615,
        "tokens_per_second": 3.38,
        "time_to_first_token_seconds": 0.561,
        "prompt_tokens": 296,
        "completion_tokens": 19,
        "total_tokens": 315,
        "response_length_chars": 50,
        "response_length_words": 6,
        "chars_per_second": 8.9,
        "words_per_second": 1.07
      },
      "expected_output": "{\"topic\": \"aerodynamics\", \"confidence\": 90}"
    },
    {
      "scenario_id": "topic_detection_en_028",
      "scenario_name": "Food Industry Operations - Very Hard",
      "prompt": "Available topics: [\"food safety\", \"quality control\", \"product development\", \"supply chain management\", \"packaging design\", \"nutritional analysis\", \"regulatory compliance\", \"manufacturing processes\", \"inventory management\", \"distribution logistics\", \"restaurant operations\", \"menu planning\", \"cost control\", \"staff training\", \"customer service\", \"marketing and branding\", \"equipment maintenance\", \"waste management\", \"sustainability practices\", \"international trade\", \"food technology\", \"research and development\", \"sensory evaluation\", \"shelf life testing\", \"allergen management\"]\n\nSentence: \"The food manufacturer is implementing HACCP protocols while also developing new plant-based protein formulations that meet both taste preferences and nutritional requirements for their target market.\"",
      "response": "{\"topic\": \"product development\", \"confidence\": 85}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.507,
        "tokens_per_second": 3.27,
        "time_to_first_token_seconds": 0.551,
        "prompt_tokens": 298,
        "completion_tokens": 18,
        "total_tokens": 316,
        "response_length_chars": 50,
        "response_length_words": 5,
        "chars_per_second": 9.08,
        "words_per_second": 0.91
      },
      "expected_output": "{\"topic\": \"product development\", \"confidence\": 75}"
    },
    {
      "scenario_id": "topic_detection_en_029",
      "scenario_name": "Banking and Financial Services - Very Hard",
      "prompt": "Available topics: [\"retail banking\", \"commercial lending\", \"investment banking\", \"wealth management\", \"risk management\", \"compliance and regulations\", \"digital banking\", \"payment processing\", \"credit analysis\", \"fraud detection\", \"customer service\", \"branch operations\", \"loan underwriting\", \"treasury operations\", \"foreign exchange\", \"trade finance\", \"asset management\", \"insurance services\", \"financial planning\", \"mortgage lending\", \"small business banking\", \"corporate banking\", \"private banking\", \"investment advisory\", \"fintech integration\"]\n\nSentence: \"The bank's new mobile app integrates biometric authentication with real-time fraud monitoring and allows customers to apply for loans directly through their smartphone with instant pre-approval decisions.\"",
      "response": "{\"topic\": \"digital banking\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.499,
        "tokens_per_second": 3.27,
        "time_to_first_token_seconds": 0.55,
        "prompt_tokens": 298,
        "completion_tokens": 18,
        "total_tokens": 316,
        "response_length_chars": 46,
        "response_length_words": 5,
        "chars_per_second": 8.37,
        "words_per_second": 0.91
      },
      "expected_output": "{\"topic\": \"digital banking\", \"confidence\": 85}"
    },
    {
      "scenario_id": "topic_detection_en_030",
      "scenario_name": "Energy Sector Specializations - Very Hard",
      "prompt": "Available topics: [\"oil and gas exploration\", \"renewable energy development\", \"nuclear power operations\", \"coal mining\", \"natural gas processing\", \"solar panel installation\", \"wind farm construction\", \"hydroelectric generation\", \"geothermal systems\", \"energy storage\", \"grid management\", \"energy efficiency\", \"carbon capture\", \"environmental impact\", \"regulatory compliance\", \"energy trading\", \"power plant operations\", \"transmission infrastructure\", \"energy policy\", \"research and development\", \"project financing\", \"equipment manufacturing\", \"maintenance services\", \"safety protocols\", \"international energy markets\"]\n\nSentence: \"The utility company is investing in large-scale battery storage systems to complement their existing wind and solar installations while also upgrading the electrical grid infrastructure for better load balancing.\"",
      "response": "{\"topic\": \"energy storage\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.851,
        "tokens_per_second": 3.08,
        "time_to_first_token_seconds": 0.585,
        "prompt_tokens": 305,
        "completion_tokens": 18,
        "total_tokens": 323,
        "response_length_chars": 45,
        "response_length_words": 5,
        "chars_per_second": 7.69,
        "words_per_second": 0.85
      },
      "expected_output": "{\"topic\": \"energy storage\", \"confidence\": 80}"
    },
    {
      "scenario_id": "topic_detection_en_011_1",
      "scenario_name": "Complex Medical Subspecialties - Very Hard",
      "prompt": "Available topics: [\"pediatric cardiology\", \"interventional cardiology\", \"cardiac electrophysiology\", \"adult congenital heart disease\", \"heart failure\", \"cardiovascular imaging\", \"preventive cardiology\", \"cardiac rehabilitation\", \"valvular heart disease\", \"coronary artery disease\", \"arrhythmias\", \"hypertension\", \"lipid disorders\", \"peripheral artery disease\", \"aortic diseases\", \"pulmonary hypertension\", \"cardiac surgery\", \"transplant cardiology\", \"sports cardiology\", \"women's cardiovascular health\", \"geriatric cardiology\", \"nuclear cardiology\", \"cardiac catheterization\", \"echocardiography\", \"cardiac MRI\"]\n\nSentence: \"The patient requires a specialized procedure to correct the abnormal electrical pathways in the heart that are causing life-threatening irregular rhythms.\"",
      "response": "{\"topic\": \"cardiac electrophysiology\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 6.461,
        "tokens_per_second": 3.4,
        "time_to_first_token_seconds": 0.646,
        "prompt_tokens": 324,
        "completion_tokens": 22,
        "total_tokens": 346,
        "response_length_chars": 56,
        "response_length_words": 5,
        "chars_per_second": 8.67,
        "words_per_second": 0.77
      },
      "expected_output": "{\"topic\": \"cardiac electrophysiology\", \"confidence\": 92}"
    },
    {
      "scenario_id": "topic_detection_en_012_1",
      "scenario_name": "Software Engineering Microspecialties - Very Hard",
      "prompt": "Available topics: [\"frontend development\", \"backend development\", \"full-stack development\", \"mobile development\", \"game development\", \"embedded systems\", \"DevOps engineering\", \"site reliability engineering\", \"quality assurance\", \"test automation\", \"performance testing\", \"security testing\", \"database administration\", \"data engineering\", \"machine learning engineering\", \"AI research\", \"computer vision\", \"natural language processing\", \"robotics software\", \"blockchain development\", \"cloud architecture\", \"microservices\", \"API development\", \"UI/UX design\", \"technical writing\"]\n\nSentence: \"We need to implement comprehensive automated test suites that can validate our application's behavior under various load conditions and stress scenarios.\"",
      "response": "{\"topic\": \"performance testing\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.26,
        "tokens_per_second": 3.42,
        "time_to_first_token_seconds": 0.526,
        "prompt_tokens": 286,
        "completion_tokens": 18,
        "total_tokens": 304,
        "response_length_chars": 50,
        "response_length_words": 5,
        "chars_per_second": 9.51,
        "words_per_second": 0.95
      },
      "expected_output": "{\"topic\": \"performance testing\", \"confidence\": 88}"
    },
    {
      "scenario_id": "topic_detection_en_013_1",
      "scenario_name": "Legal Practice Areas - Very Hard",
      "prompt": "Available topics: [\"corporate law\", \"mergers and acquisitions\", \"securities law\", \"intellectual property\", \"patent law\", \"trademark law\", \"copyright law\", \"employment law\", \"labor relations\", \"immigration law\", \"real estate law\", \"environmental law\", \"tax law\", \"estate planning\", \"probate law\", \"family law\", \"divorce law\", \"criminal defense\", \"personal injury\", \"medical malpractice\", \"product liability\", \"antitrust law\", \"bankruptcy law\", \"international law\", \"constitutional law\"]\n\nSentence: \"The company is facing allegations that their new product design infringes on existing protected innovations and may need to pay substantial licensing fees.\"",
      "response": "{\"topic\": \"intellectual property\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.439,
        "tokens_per_second": 3.49,
        "time_to_first_token_seconds": 0.544,
        "prompt_tokens": 295,
        "completion_tokens": 19,
        "total_tokens": 314,
        "response_length_chars": 52,
        "response_length_words": 5,
        "chars_per_second": 9.56,
        "words_per_second": 0.92
      },
      "expected_output": "{\"topic\": \"patent law\", \"confidence\": 85}"
    },
    {
      "scenario_id": "topic_detection_en_014_1",
      "scenario_name": "Multiple Related Finance Topics - Very Hard",
      "prompt": "Available topics: [\"investment banking\", \"commercial banking\", \"retail banking\", \"private banking\", \"wealth management\", \"asset management\", \"portfolio management\", \"risk management\", \"credit analysis\", \"loan origination\", \"mortgage lending\", \"insurance underwriting\", \"actuarial science\", \"financial planning\", \"retirement planning\", \"tax planning\", \"estate planning\", \"corporate finance\", \"mergers and acquisitions\", \"venture capital\", \"private equity\", \"hedge funds\", \"mutual funds\", \"derivatives trading\", \"foreign exchange\"]\n\nSentence: \"The financial advisor is helping the client restructure their investment portfolio to minimize tax liabilities while ensuring adequate funds for their golden years.\"",
      "response": "{\"topic\": \"wealth management\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.432,
        "tokens_per_second": 3.31,
        "time_to_first_token_seconds": 0.543,
        "prompt_tokens": 292,
        "completion_tokens": 18,
        "total_tokens": 310,
        "response_length_chars": 48,
        "response_length_words": 5,
        "chars_per_second": 8.84,
        "words_per_second": 0.92
      },
      "expected_output": "{\"topic\": \"retirement planning\", \"confidence\": 78}"
    },
    {
      "scenario_id": "topic_detection_en_015_1",
      "scenario_name": "Academic Research Disciplines - Very Hard",
      "prompt": "Available topics: [\"theoretical physics\", \"experimental physics\", \"quantum mechanics\", \"condensed matter physics\", \"particle physics\", \"astrophysics\", \"cosmology\", \"materials science\", \"nanotechnology\", \"biotechnology\", \"biochemistry\", \"molecular biology\", \"cell biology\", \"genetics\", \"immunology\", \"neuroscience\", \"cognitive science\", \"psychology\", \"sociology\", \"anthropology\", \"archaeology\", \"linguistics\", \"philosophy\", \"mathematics\", \"computer science\"]\n\nSentence: \"The research team is investigating how quantum entanglement effects might be preserved and utilized in solid-state systems at room temperature for practical applications.\"",
      "response": "{\"topic\": \"condensed matter physics\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.543,
        "tokens_per_second": 3.61,
        "time_to_first_token_seconds": 0.554,
        "prompt_tokens": 296,
        "completion_tokens": 20,
        "total_tokens": 316,
        "response_length_chars": 55,
        "response_length_words": 6,
        "chars_per_second": 9.92,
        "words_per_second": 1.08
      },
      "expected_output": "{\"topic\": \"condensed matter physics\", \"confidence\": 82}"
    },
    {
      "scenario_id": "topic_detection_en_016_1",
      "scenario_name": "Overlapping Business Functions - Very Hard",
      "prompt": "Available topics: [\"strategic planning\", \"business development\", \"market research\", \"competitive analysis\", \"product management\", \"project management\", \"operations management\", \"supply chain management\", \"quality management\", \"human resources\", \"talent acquisition\", \"performance management\", \"training and development\", \"compensation and benefits\", \"employee relations\", \"marketing strategy\", \"digital marketing\", \"content marketing\", \"social media marketing\", \"sales management\", \"customer relationship management\", \"business intelligence\", \"data analytics\", \"financial analysis\", \"risk assessment\"]\n\nSentence: \"The company needs to analyze customer behavior patterns and purchasing trends to develop targeted campaigns that will increase market share in the competitive landscape.\"",
      "response": "{\"topic\": \"market research\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.025,
        "tokens_per_second": 3.58,
        "time_to_first_token_seconds": 0.502,
        "prompt_tokens": 287,
        "completion_tokens": 18,
        "total_tokens": 305,
        "response_length_chars": 46,
        "response_length_words": 5,
        "chars_per_second": 9.15,
        "words_per_second": 1.0
      },
      "expected_output": "{\"topic\": \"market research\", \"confidence\": 75}"
    },
    {
      "scenario_id": "topic_detection_en_017_1",
      "scenario_name": "Environmental Science Subdisciplines - Very Hard",
      "prompt": "Available topics: [\"climate science\", \"atmospheric chemistry\", \"oceanography\", \"marine biology\", \"ecology\", \"conservation biology\", \"wildlife management\", \"forestry\", \"hydrology\", \"soil science\", \"environmental chemistry\", \"environmental toxicology\", \"pollution control\", \"waste management\", \"renewable energy\", \"sustainable development\", \"environmental policy\", \"environmental law\", \"environmental economics\", \"carbon footprint analysis\", \"life cycle assessment\", \"environmental monitoring\", \"restoration ecology\", \"urban planning\", \"green technology\"]\n\nSentence: \"Scientists are studying how rising sea temperatures and acidification levels are affecting coral reef ecosystems and the species that depend on them for survival.\"",
      "response": "{\"topic\": \"marine biology\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.329,
        "tokens_per_second": 3.38,
        "time_to_first_token_seconds": 0.533,
        "prompt_tokens": 301,
        "completion_tokens": 18,
        "total_tokens": 319,
        "response_length_chars": 45,
        "response_length_words": 5,
        "chars_per_second": 8.44,
        "words_per_second": 0.94
      },
      "expected_output": "{\"topic\": \"marine biology\", \"confidence\": 88}"
    },
    {
      "scenario_id": "topic_detection_en_018_1",
      "scenario_name": "Psychological Therapy Approaches - Very Hard",
      "prompt": "Available topics: [\"cognitive behavioral therapy\", \"dialectical behavior therapy\", \"acceptance and commitment therapy\", \"psychodynamic therapy\", \"humanistic therapy\", \"gestalt therapy\", \"family systems therapy\", \"couples therapy\", \"group therapy\", \"play therapy\", \"art therapy\", \"music therapy\", \"dance movement therapy\", \"exposure therapy\", \"EMDR therapy\", \"mindfulness-based therapy\", \"solution-focused therapy\", \"narrative therapy\", \"trauma-informed therapy\", \"addiction counseling\", \"grief counseling\", \"crisis intervention\", \"behavioral analysis\", \"neuropsychology\", \"rehabilitation psychology\"]\n\nSentence: \"The therapist is using structured exercises to help the client systematically confront their fears in a controlled environment while teaching relaxation techniques.\"",
      "response": "{\"topic\": \"exposure therapy\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.834,
        "tokens_per_second": 3.26,
        "time_to_first_token_seconds": 0.583,
        "prompt_tokens": 309,
        "completion_tokens": 19,
        "total_tokens": 328,
        "response_length_chars": 47,
        "response_length_words": 5,
        "chars_per_second": 8.06,
        "words_per_second": 0.86
      },
      "expected_output": "{\"topic\": \"exposure therapy\", \"confidence\": 90}"
    },
    {
      "scenario_id": "topic_detection_en_019_1",
      "scenario_name": "Engineering Specializations - Very Hard",
      "prompt": "Available topics: [\"civil engineering\", \"structural engineering\", \"geotechnical engineering\", \"transportation engineering\", \"environmental engineering\", \"water resources engineering\", \"mechanical engineering\", \"thermal engineering\", \"fluid mechanics\", \"materials engineering\", \"manufacturing engineering\", \"electrical engineering\", \"power systems engineering\", \"control systems engineering\", \"signal processing\", \"telecommunications\", \"computer engineering\", \"software engineering\", \"biomedical engineering\", \"chemical engineering\", \"petroleum engineering\", \"aerospace engineering\", \"nuclear engineering\", \"industrial engineering\", \"systems engineering\"]\n\nSentence: \"The team is designing a new bridge that must withstand seismic activity while supporting heavy traffic loads, requiring detailed analysis of soil conditions and foundation requirements.\"",
      "response": "{\"topic\": \"civil engineering\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.6,
        "tokens_per_second": 3.21,
        "time_to_first_token_seconds": 0.56,
        "prompt_tokens": 299,
        "completion_tokens": 18,
        "total_tokens": 317,
        "response_length_chars": 48,
        "response_length_words": 5,
        "chars_per_second": 8.57,
        "words_per_second": 0.89
      },
      "expected_output": "{\"topic\": \"structural engineering\", \"confidence\": 85}"
    },
    {
      "scenario_id": "topic_detection_en_020_1",
      "scenario_name": "Culinary Arts Specializations - Very Hard",
      "prompt": "Available topics: [\"classical french cuisine\", \"italian cuisine\", \"asian fusion\", \"molecular gastronomy\", \"farm-to-table cooking\", \"vegan cuisine\", \"gluten-free cooking\", \"pastry arts\", \"chocolate making\", \"bread baking\", \"wine pairing\", \"cocktail mixology\", \"food photography\", \"restaurant management\", \"catering services\", \"food safety\", \"nutrition planning\", \"menu development\", \"cost control\", \"inventory management\", \"staff training\", \"customer service\", \"food styling\", \"culinary education\", \"food criticism\"]\n\nSentence: \"The chef is experimenting with liquid nitrogen and spherification techniques to create innovative textures and surprising flavor combinations that challenge traditional dining expectations.\"",
      "response": "{\"topic\": \"molecular gastronomy\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.722,
        "tokens_per_second": 3.5,
        "time_to_first_token_seconds": 0.572,
        "prompt_tokens": 298,
        "completion_tokens": 20,
        "total_tokens": 318,
        "response_length_chars": 51,
        "response_length_words": 5,
        "chars_per_second": 8.91,
        "words_per_second": 0.87
      },
      "expected_output": "{\"topic\": \"molecular gastronomy\", \"confidence\": 95}"
    },
    {
      "scenario_id": "topic_detection_en_021_1",
      "scenario_name": "Multiple Art Historical Periods - Very Hard",
      "prompt": "Available topics: [\"ancient art\", \"classical antiquity\", \"byzantine art\", \"medieval art\", \"gothic art\", \"renaissance art\", \"baroque art\", \"rococo art\", \"neoclassicism\", \"romanticism\", \"realism\", \"impressionism\", \"post-impressionism\", \"art nouveau\", \"fauvism\", \"expressionism\", \"cubism\", \"futurism\", \"dadaism\", \"surrealism\", \"abstract expressionism\", \"pop art\", \"minimalism\", \"conceptual art\", \"contemporary art\"]\n\nSentence: \"The museum exhibition showcases works that emphasize emotional intensity and distorted forms, rejecting traditional academic standards in favor of bold colors and expressive brushwork.\"",
      "response": "{\"topic\": \"expressionism\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.611,
        "tokens_per_second": 3.21,
        "time_to_first_token_seconds": 0.561,
        "prompt_tokens": 308,
        "completion_tokens": 18,
        "total_tokens": 326,
        "response_length_chars": 44,
        "response_length_words": 4,
        "chars_per_second": 7.84,
        "words_per_second": 0.71
      },
      "expected_output": "{\"topic\": \"expressionism\", \"confidence\": 87}"
    },
    {
      "scenario_id": "topic_detection_en_022_1",
      "scenario_name": "Sports Medicine Subspecialties - Very Hard",
      "prompt": "Available topics: [\"sports medicine\", \"orthopedic surgery\", \"physical therapy\", \"sports psychology\", \"exercise physiology\", \"biomechanics\", \"sports nutrition\", \"injury prevention\", \"rehabilitation therapy\", \"athletic training\", \"strength conditioning\", \"performance analysis\", \"concussion management\", \"cardiac screening\", \"doping control\", \"sports pharmacology\", \"recovery techniques\", \"manual therapy\", \"kinetic assessment\", \"functional movement\", \"pain management\", \"surgical techniques\", \"prosthetics fitting\", \"adaptive sports\", \"youth sports development\"]\n\nSentence: \"The specialist is developing a comprehensive program to help the athlete regain full range of motion and strength following reconstructive knee surgery.\"",
      "response": "{\"topic\": \"rehabilitation therapy\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.481,
        "tokens_per_second": 3.65,
        "time_to_first_token_seconds": 0.548,
        "prompt_tokens": 297,
        "completion_tokens": 20,
        "total_tokens": 317,
        "response_length_chars": 53,
        "response_length_words": 5,
        "chars_per_second": 9.67,
        "words_per_second": 0.91
      },
      "expected_output": "{\"topic\": \"rehabilitation therapy\", \"confidence\": 89}"
    },
    {
      "scenario_id": "topic_detection_en_023_1",
      "scenario_name": "Advanced Computing Paradigms - Very Hard",
      "prompt": "Available topics: [\"quantum computing\", \"classical computing\", \"parallel computing\", \"distributed computing\", \"cloud computing\", \"edge computing\", \"fog computing\", \"neuromorphic computing\", \"photonic computing\", \"DNA computing\", \"molecular computing\", \"reversible computing\", \"approximate computing\", \"green computing\", \"high-performance computing\", \"grid computing\", \"cluster computing\", \"serverless computing\", \"autonomous computing\", \"cognitive computing\", \"affective computing\", \"ubiquitous computing\", \"pervasive computing\", \"mobile computing\", \"wearable computing\"]\n\nSentence: \"Researchers are exploring how to leverage the superposition and entanglement properties of qubits to solve optimization problems that are intractable for traditional silicon-based processors.\"",
      "response": "{\"topic\": \"quantum computing\", \"confidence\": 100}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.823,
        "tokens_per_second": 3.43,
        "time_to_first_token_seconds": 0.582,
        "prompt_tokens": 306,
        "completion_tokens": 20,
        "total_tokens": 326,
        "response_length_chars": 49,
        "response_length_words": 5,
        "chars_per_second": 8.41,
        "words_per_second": 0.86
      },
      "expected_output": "{\"topic\": \"quantum computing\", \"confidence\": 96}"
    },
    {
      "scenario_id": "topic_detection_en_024_1",
      "scenario_name": "Educational Psychology Methods - Very Hard",
      "prompt": "Available topics: [\"cognitive development\", \"social learning theory\", \"constructivist learning\", \"behaviorist approaches\", \"motivational psychology\", \"learning disabilities\", \"giftedness education\", \"special needs education\", \"inclusive education\", \"differentiated instruction\", \"assessment methods\", \"standardized testing\", \"formative assessment\", \"summative assessment\", \"classroom management\", \"student engagement\", \"collaborative learning\", \"project-based learning\", \"inquiry-based learning\", \"technology integration\", \"digital literacy\", \"curriculum development\", \"instructional design\", \"teacher training\", \"educational research\"]\n\nSentence: \"The educator is implementing strategies that allow students to build knowledge through hands-on exploration and discovery rather than passive reception of information.\"",
      "response": "{\"topic\": \"constructivist learning\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.546,
        "tokens_per_second": 3.43,
        "time_to_first_token_seconds": 0.555,
        "prompt_tokens": 300,
        "completion_tokens": 19,
        "total_tokens": 319,
        "response_length_chars": 54,
        "response_length_words": 5,
        "chars_per_second": 9.74,
        "words_per_second": 0.9
      },
      "expected_output": "{\"topic\": \"inquiry-based learning\", \"confidence\": 85}"
    },
    {
      "scenario_id": "topic_detection_en_025_1",
      "scenario_name": "Marine Science Specializations - Very Hard",
      "prompt": "Available topics: [\"marine biology\", \"oceanography\", \"marine ecology\", \"marine conservation\", \"fisheries science\", \"aquaculture\", \"marine biotechnology\", \"coral reef studies\", \"deep sea research\", \"marine geology\", \"marine chemistry\", \"marine physics\", \"biological oceanography\", \"physical oceanography\", \"chemical oceanography\", \"geological oceanography\", \"marine pollution\", \"coastal management\", \"maritime archaeology\", \"marine engineering\", \"underwater robotics\", \"marine instrumentation\", \"sea level studies\", \"climate oceanography\", \"marine policy\"]\n\nSentence: \"Scientists are using autonomous underwater vehicles to map the seafloor topography and collect sediment samples from previously unexplored abyssal plains.\"",
      "response": "{\"topic\": \"underwater robotics\", \"confidence\": 90}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.704,
        "tokens_per_second": 3.33,
        "time_to_first_token_seconds": 0.57,
        "prompt_tokens": 302,
        "completion_tokens": 19,
        "total_tokens": 321,
        "response_length_chars": 50,
        "response_length_words": 5,
        "chars_per_second": 8.77,
        "words_per_second": 0.88
      },
      "expected_output": "{\"topic\": \"marine geology\", \"confidence\": 87}"
    },
    {
      "scenario_id": "topic_detection_en_026_1",
      "scenario_name": "Aerospace Engineering Divisions - Very Hard",
      "prompt": "Available topics: [\"aerodynamics\", \"propulsion systems\", \"flight mechanics\", \"structural analysis\", \"materials science\", \"avionics systems\", \"navigation systems\", \"control systems\", \"spacecraft design\", \"satellite technology\", \"orbital mechanics\", \"mission planning\", \"launch systems\", \"reentry systems\", \"life support systems\", \"thermal protection\", \"guidance systems\", \"communication systems\", \"power systems\", \"fuel systems\", \"landing systems\", \"testing procedures\", \"safety systems\", \"manufacturing processes\", \"quality assurance\"]\n\nSentence: \"Engineers are designing a specialized heat shield that can withstand the extreme temperatures generated during atmospheric entry while maintaining structural integrity.\"",
      "response": "{\"topic\": \"thermal protection\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.442,
        "tokens_per_second": 3.31,
        "time_to_first_token_seconds": 0.544,
        "prompt_tokens": 289,
        "completion_tokens": 18,
        "total_tokens": 307,
        "response_length_chars": 49,
        "response_length_words": 5,
        "chars_per_second": 9.0,
        "words_per_second": 0.92
      },
      "expected_output": "{\"topic\": \"thermal protection\", \"confidence\": 92}"
    },
    {
      "scenario_id": "topic_detection_en_027_1",
      "scenario_name": "Overlapping Biomedical Research Areas - Very Hard",
      "prompt": "Available topics: [\"genomics\", \"proteomics\", \"metabolomics\", \"transcriptomics\", \"epigenetics\", \"pharmacogenomics\", \"personalized medicine\", \"precision medicine\", \"gene therapy\", \"cell therapy\", \"immunotherapy\", \"cancer research\", \"stem cell research\", \"regenerative medicine\", \"tissue engineering\", \"biomarker discovery\", \"drug development\", \"clinical trials\", \"translational research\", \"systems biology\", \"computational biology\", \"bioinformatics\", \"biostatistics\", \"epidemiology\", \"public health\"]\n\nSentence: \"Researchers are analyzing how genetic variations affect individual responses to medications to develop more effective and safer treatment protocols.\"",
      "response": "{\"topic\": \"pharmacogenomics\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.612,
        "tokens_per_second": 3.56,
        "time_to_first_token_seconds": 0.561,
        "prompt_tokens": 295,
        "completion_tokens": 20,
        "total_tokens": 315,
        "response_length_chars": 47,
        "response_length_words": 4,
        "chars_per_second": 8.38,
        "words_per_second": 0.71
      },
      "expected_output": "{\"topic\": \"pharmacogenomics\", \"confidence\": 91}"
    },
    {
      "scenario_id": "topic_detection_en_028_1",
      "scenario_name": "Urban Planning Specializations - Very Hard",
      "prompt": "Available topics: [\"urban design\", \"regional planning\", \"transportation planning\", \"housing policy\", \"zoning regulations\", \"land use planning\", \"environmental planning\", \"economic development\", \"community development\", \"historic preservation\", \"smart city technology\", \"sustainable development\", \"green infrastructure\", \"public space design\", \"walkability planning\", \"transit-oriented development\", \"affordable housing\", \"gentrification studies\", \"urban sprawl\", \"density planning\", \"mixed-use development\", \"infrastructure planning\", \"disaster resilience\", \"climate adaptation\", \"participatory planning\"]\n\nSentence: \"The city is implementing a comprehensive strategy to concentrate new residential and commercial development around subway stations to reduce car dependency and promote walkable communities.\"",
      "response": "{\"topic\": \"transit-oriented development\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.729,
        "tokens_per_second": 3.49,
        "time_to_first_token_seconds": 0.573,
        "prompt_tokens": 301,
        "completion_tokens": 20,
        "total_tokens": 321,
        "response_length_chars": 59,
        "response_length_words": 5,
        "chars_per_second": 10.3,
        "words_per_second": 0.87
      },
      "expected_output": "{\"topic\": \"transit-oriented development\", \"confidence\": 94}"
    },
    {
      "scenario_id": "topic_detection_en_029_1",
      "scenario_name": "Archaeological Methodologies - Very Hard",
      "prompt": "Available topics: [\"excavation techniques\", \"survey methods\", \"stratigraphic analysis\", \"ceramic analysis\", \"lithic analysis\", \"bioarchaeology\", \"zooarchaeology\", \"paleoethnobotany\", \"radiocarbon dating\", \"dendrochronology\", \"thermoluminescence dating\", \"ground-penetrating radar\", \"magnetic surveying\", \"photogrammetry\", \"3D modeling\", \"artifact conservation\", \"site preservation\", \"cultural resource management\", \"underwater archaeology\", \"aerial archaeology\", \"experimental archaeology\", \"ethnoarchaeology\", \"landscape archaeology\", \"digital archaeology\", \"public archaeology\"]\n\nSentence: \"Archaeologists are using remote sensing technology to detect buried structures and features without disturbing the ground surface at the ancient settlement site.\"",
      "response": "{\"topic\": \"ground-penetrating radar\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 6.44,
        "tokens_per_second": 3.42,
        "time_to_first_token_seconds": 0.644,
        "prompt_tokens": 327,
        "completion_tokens": 22,
        "total_tokens": 349,
        "response_length_chars": 55,
        "response_length_words": 5,
        "chars_per_second": 8.54,
        "words_per_second": 0.78
      },
      "expected_output": "{\"topic\": \"ground-penetrating radar\", \"confidence\": 85}"
    },
    {
      "scenario_id": "topic_detection_en_030_1",
      "scenario_name": "Renewable Energy Technologies - Very Hard",
      "prompt": "Available topics: [\"solar photovoltaics\", \"concentrated solar power\", \"wind turbines\", \"offshore wind\", \"hydroelectric power\", \"pumped hydro storage\", \"geothermal energy\", \"biomass energy\", \"biofuels\", \"tidal energy\", \"wave energy\", \"hydrogen fuel cells\", \"battery storage\", \"flywheel storage\", \"compressed air storage\", \"smart grid technology\", \"microgrids\", \"energy efficiency\", \"green buildings\", \"electric vehicles\", \"carbon capture\", \"energy policy\", \"renewable integration\", \"grid stability\", \"energy economics\"]\n\nSentence: \"Engineers are developing advanced systems that can store excess electrical energy by compressing air in underground caverns and releasing it through turbines when demand increases.\"",
      "response": "{\"topic\": \"compressed air storage\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 5.645,
        "tokens_per_second": 3.37,
        "time_to_first_token_seconds": 0.564,
        "prompt_tokens": 306,
        "completion_tokens": 19,
        "total_tokens": 325,
        "response_length_chars": 53,
        "response_length_words": 6,
        "chars_per_second": 9.39,
        "words_per_second": 1.06
      },
      "expected_output": "{\"topic\": \"compressed air storage\", \"confidence\": 93}"
    }
  ],
  "performance_summary": {
    "model_download_time_seconds": 0.148,
    "model_load_time_seconds": 4.266,
    "total_test_time_seconds": 267.056,
    "total_scenarios_tested": 50,
    "average_generation_time_seconds": 5.341,
    "average_tokens_per_second": 3.63,
    "total_tokens_generated": 15071,
    "total_generation_time_seconds": 267.054
  }
}