{
  "model_type": "llama31-8B",
  "scenario_type": "topic-detection-en",
  "timestamp": "20250701-134710",
  "test_type": "topic-detection-en",
  "language": "en",
  "results": [
    {
      "scenario_id": "topic_detection_en_001",
      "scenario_name": "Easy Sports vs Food Classification",
      "prompt": "Available topics: [\"talk about sports\", \"order food\", \"discuss weather\", \"ask for directions\"]\n\nSentence: \"I'd like a large pizza with pepperoni and extra cheese, please.\"",
      "response": "{\n  \"topic\": \"order food\",\n  \"confidence\": 100\n}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 2.616,
        "tokens_per_second": 6.5,
        "time_to_first_token_seconds": 0.262,
        "prompt_tokens": 192,
        "completion_tokens": 17,
        "total_tokens": 209,
        "response_length_chars": 48,
        "response_length_words": 7,
        "chars_per_second": 18.35,
        "words_per_second": 2.68
      },
      "expected_output": "{\"topic\": \"order food\", \"confidence\": 95}"
    },
    {
      "scenario_id": "topic_detection_en_002",
      "scenario_name": "Technology Subcategories - Hard",
      "prompt": "Available topics: [\"software development\", \"hardware troubleshooting\", \"network configuration\", \"database optimization\", \"cybersecurity concerns\", \"mobile app design\", \"cloud computing\", \"artificial intelligence\"]\n\nSentence: \"The machine learning model is overfitting on the training data and showing poor generalization.\"",
      "response": "{\n  \"topic\": \"artificial intelligence\",\n  \"confidence\": 95\n}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 3.201,
        "tokens_per_second": 5.62,
        "time_to_first_token_seconds": 0.32,
        "prompt_tokens": 202,
        "completion_tokens": 18,
        "total_tokens": 220,
        "response_length_chars": 60,
        "response_length_words": 7,
        "chars_per_second": 18.74,
        "words_per_second": 2.19
      },
      "expected_output": "{\"topic\": \"artificial intelligence\", \"confidence\": 90}"
    },
    {
      "scenario_id": "topic_detection_en_003",
      "scenario_name": "Medical Specialties - Very Hard",
      "prompt": "Available topics: [\"cardiology\", \"neurology\", \"orthopedics\", \"dermatology\", \"gastroenterology\", \"endocrinology\", \"pulmonology\", \"rheumatology\", \"oncology\", \"psychiatry\"]\n\nSentence: \"The patient is experiencing irregular heartbeat patterns and chest tightness after climbing stairs.\"",
      "response": "{\"topic\": \"cardiology\", \"confidence\": 80}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 2.332,
        "tokens_per_second": 5.58,
        "time_to_first_token_seconds": 0.233,
        "prompt_tokens": 215,
        "completion_tokens": 13,
        "total_tokens": 228,
        "response_length_chars": 41,
        "response_length_words": 4,
        "chars_per_second": 17.58,
        "words_per_second": 1.72
      },
      "expected_output": "{\"topic\": \"cardiology\", \"confidence\": 85}"
    },
    {
      "scenario_id": "topic_detection_en_004",
      "scenario_name": "Customer Service Intents - Medium",
      "prompt": "Available topics: [\"billing inquiry\", \"technical support\", \"product complaint\", \"refund request\", \"account cancellation\", \"feature request\"]\n\nSentence: \"I was charged twice for my subscription this month and need to get one of those charges reversed.\"",
      "response": "{\"topic\": \"billing inquiry\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 2.281,
        "tokens_per_second": 5.7,
        "time_to_first_token_seconds": 0.228,
        "prompt_tokens": 191,
        "completion_tokens": 13,
        "total_tokens": 204,
        "response_length_chars": 46,
        "response_length_words": 5,
        "chars_per_second": 20.17,
        "words_per_second": 2.19
      },
      "expected_output": "{\"topic\": \"billing inquiry\", \"confidence\": 88}"
    },
    {
      "scenario_id": "topic_detection_en_005",
      "scenario_name": "Academic Subjects - Easy",
      "prompt": "Available topics: [\"mathematics\", \"literature\", \"biology\", \"history\", \"physics\", \"chemistry\"]\n\nSentence: \"Shakespeare's use of iambic pentameter in his sonnets demonstrates his mastery of poetic form.\"",
      "response": "{\"topic\": \"literature\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 2.078,
        "tokens_per_second": 6.25,
        "time_to_first_token_seconds": 0.208,
        "prompt_tokens": 190,
        "completion_tokens": 13,
        "total_tokens": 203,
        "response_length_chars": 41,
        "response_length_words": 4,
        "chars_per_second": 19.73,
        "words_per_second": 1.92
      },
      "expected_output": "{\"topic\": \"literature\", \"confidence\": 98}"
    },
    {
      "scenario_id": "topic_detection_en_006",
      "scenario_name": "Financial Services - Hard",
      "prompt": "Available topics: [\"investment advice\", \"loan application\", \"insurance claims\", \"retirement planning\", \"tax consultation\", \"mortgage refinancing\", \"credit score inquiry\", \"fraud reporting\", \"account opening\", \"currency exchange\"]\n\nSentence: \"I need help determining the optimal asset allocation for my 401k given that I'm 15 years from retirement.\"",
      "response": "{\"topic\": \"investment advice\", \"confidence\": 95}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 2.271,
        "tokens_per_second": 5.72,
        "time_to_first_token_seconds": 0.227,
        "prompt_tokens": 216,
        "completion_tokens": 13,
        "total_tokens": 229,
        "response_length_chars": 48,
        "response_length_words": 5,
        "chars_per_second": 21.13,
        "words_per_second": 2.2
      },
      "expected_output": "{\"topic\": \"retirement planning\", \"confidence\": 92}"
    },
    {
      "scenario_id": "topic_detection_en_007",
      "scenario_name": "Travel Related - Medium",
      "prompt": "Available topics: [\"flight booking\", \"hotel reservation\", \"car rental\", \"travel insurance\", \"visa requirements\", \"local attractions\", \"restaurant recommendations\", \"transportation info\"]\n\nSentence: \"What documents do I need to enter Japan as a tourist for two weeks?\"",
      "response": "{\n  \"topic\": \"visa requirements\",\n  \"confidence\": 95\n}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 2.839,
        "tokens_per_second": 5.99,
        "time_to_first_token_seconds": 0.284,
        "prompt_tokens": 196,
        "completion_tokens": 17,
        "total_tokens": 213,
        "response_length_chars": 54,
        "response_length_words": 7,
        "chars_per_second": 19.02,
        "words_per_second": 2.47
      },
      "expected_output": "{\"topic\": \"visa requirements\", \"confidence\": 94}"
    },
    {
      "scenario_id": "topic_detection_en_008",
      "scenario_name": "E-commerce Actions - Very Hard",
      "prompt": "Available topics: [\"product search\", \"add to cart\", \"checkout process\", \"payment method\", \"shipping inquiry\", \"order tracking\", \"return policy\", \"price comparison\", \"product reviews\", \"wishlist management\", \"coupon application\", \"inventory check\"]\n\nSentence: \"I want to see what other customers thought about this laptop before I decide to buy it.\"",
      "response": "{\n  \"topic\": \"product reviews\",\n  \"confidence\": 90\n}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 2.792,
        "tokens_per_second": 6.09,
        "time_to_first_token_seconds": 0.279,
        "prompt_tokens": 215,
        "completion_tokens": 17,
        "total_tokens": 232,
        "response_length_chars": 52,
        "response_length_words": 7,
        "chars_per_second": 18.63,
        "words_per_second": 2.51
      },
      "expected_output": "{\"topic\": \"product reviews\", \"confidence\": 87}"
    },
    {
      "scenario_id": "topic_detection_en_009",
      "scenario_name": "Emotional States - Hard",
      "prompt": "Available topics: [\"expressing joy\", \"showing frustration\", \"feeling anxious\", \"being confused\", \"demonstrating anger\", \"showing sadness\", \"expressing excitement\", \"feeling overwhelmed\"]\n\nSentence: \"I keep going over the instructions but I still don't understand how this is supposed to work.\"",
      "response": "{\n  \"topic\": \"being confused\",\n  \"confidence\": 90\n}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 2.935,
        "tokens_per_second": 5.79,
        "time_to_first_token_seconds": 0.294,
        "prompt_tokens": 208,
        "completion_tokens": 17,
        "total_tokens": 225,
        "response_length_chars": 51,
        "response_length_words": 7,
        "chars_per_second": 17.38,
        "words_per_second": 2.38
      },
      "expected_output": "{\"topic\": \"being confused\", \"confidence\": 78}"
    },
    {
      "scenario_id": "topic_detection_en_010",
      "scenario_name": "Home Maintenance - Medium",
      "prompt": "Available topics: [\"plumbing issues\", \"electrical problems\", \"heating and cooling\", \"pest control\", \"gardening help\", \"appliance repair\", \"painting and decorating\", \"security systems\", \"roof maintenance\", \"flooring installation\"]\n\nSentence: \"The faucet in my kitchen has been dripping constantly for the past week and it's driving me crazy.\"",
      "response": "{\"topic\": \"plumbing issues\", \"confidence\": 100}",
      "personality": "You are a topic classification system. Given a list of available topics and a sentence, you must identify which topic best matches the sentence. Return your answer in JSON format with two keys: 'topic' (the exact topic string from the list or 'None' if no match) and 'confidence' (a number from 0-100 indicating how certain you are about your choice, where 100 is completely certain and 0 is completely uncertain). The output format should be like this in JSON Format: {\"topic\": \"{detected topic}\", \"confidence\": {confidence score}}. Respond only with the JSON response and nothing else.",
      "conversation_history": [],
      "performance": {
        "generation_time_seconds": 2.269,
        "tokens_per_second": 6.17,
        "time_to_first_token_seconds": 0.227,
        "prompt_tokens": 217,
        "completion_tokens": 14,
        "total_tokens": 231,
        "response_length_chars": 47,
        "response_length_words": 5,
        "chars_per_second": 20.71,
        "words_per_second": 2.2
      },
      "expected_output": "{\"topic\": \"plumbing issues\", \"confidence\": 96}"
    }
  ],
  "performance_summary": {
    "model_download_time_seconds": 0.24,
    "model_load_time_seconds": 1.234,
    "total_test_time_seconds": 25.619,
    "total_scenarios_tested": 10,
    "average_generation_time_seconds": 2.561,
    "average_tokens_per_second": 5.94,
    "total_tokens_generated": 2194,
    "total_generation_time_seconds": 25.614
  }
}